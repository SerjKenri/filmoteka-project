{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAkBO,IAAIC,GAyFXC,iBACE,IACE,MAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAASC,EAAAC,MAGLC,QAAiBT,EAAAU,QAAMC,IAAI,GAAGJ,EAAAK,uBAAgBR,KAEpD,GAAwB,MAApBK,EAASI,OACX,MAAM,IAAIC,MAAML,EAASI,QAG3B,OAAOJ,EAASM,I,CAChB,MAAOC,GACPC,QAAQC,IAAI,oD,GArGhBC,GAAkBC,MAAKX,IACrBP,EAAamB,MAAMC,KAAKb,EAASc,OAAO,IAGnC,MAAMC,EAAaC,SAASC,cAAc,eAE3CC,EAAUF,SAASC,cAAc,oBAsBhCvB,eAAeyB,EAAYC,GAChC,IACE,MAAMzB,EAAe,IAAIC,gBAAgB,CACvCC,QAASC,EAAAC,IACTqB,KAAMA,EACNC,eAAe,IAGXrB,QAAiBT,EAAAU,QAAMC,IAC3B,GAAGJ,EAAAK,eAAkBL,EAAAwB,mBAA6B3B,KAGpD,GAAwB,MAApBK,EAASI,OACX,MAAM,IAAIC,MAAML,EAASI,QAKb,OAAPJ,EAASM,I,CAChB,MAAOC,G,EAKJ,SAASgB,EAAgBjB,GAC9B,IAAIkB,EAAS,GACblB,EAAKmB,SAAQ,EAACC,GAAEA,EAAEC,YAAEA,EAAWC,UAAEA,EAASC,MAAEA,EAAKC,aAAEA,MACjD,IAAIC,EAkDD,SAAmBC,GACxB,IAAIC,EAAW,GAEf,OAAKD,GACLA,EAASP,SAAQC,IACf,IAAK,MAAMQ,KAASzC,EACdyC,EAAMR,KAAOA,IAAIO,GAAYC,EAAMC,KAAO,KAAI,IAI9CF,EAAgBA,EAASG,UAAU,EAAGH,EAASI,OAAS,GAA7C,IAPG,E,CArDJC,CAAUV,GACtBW,EAAQT,EAAoBA,EAAaM,UAAU,EAAG,GAA/B,GACvBL,GAAaQ,IAAMR,GAAa,OAC/BF,IAAOA,EAAQ,kBAMpBL,GAAU,oKAJOG,EACba,kCAAwBb,EAjE9B,qGA0EmBE,yBACDH,oEAE2BG,mDACLE,IAAYQ,sDAG9C,IAGNxB,EAAW0B,UAAYjB,EAGFkB,EAAAC,KAhGG,oBAgGa,IAAIrC,G,CCvG5B,SAAAsC,IACb5B,SAASC,cAAc,YAAY4B,UAAUC,OAAO,Y,CD2BtDC,OAAOC,iBAAiB,QAAQ,KAC9BjC,EAAW0B,UAAY,GAEvBtB,EAAY,GACTR,MAAK,EAACS,KAAEA,EAAI6B,QAAEA,EAASC,YAAaC,MACnC5B,EAAgB0B,GAChBG,EAAiBhC,EAAM+B,EAAOE,EAAgB,IAE/CC,OAAM,KACLpC,EAAQqC,mBACN,YACA,kFAGFC,YAAW,KACTtC,EAAQuB,UAAY,EAAE,GACrB,IAAK,GACR,I,0BE3CN,MAAMgB,EAAO,CACXC,KAAM1C,SAASC,cAAc,iBAC7B0C,MAAO3C,SAASC,cAAc,kBAC9B2C,WAAY5C,SAASC,cAAc,QACnC4C,QAAS7C,SAASC,cAAc,eAChC6C,QAAS9C,SAASC,cAAc,qBAuD3B,MAAM8C,EAAW,IA1CjB,MAMLrE,uBAAuB0B,GACrB,MAAM4C,EAAoB,IAAIpE,gBAAgB,CAC5CC,QAASC,EAAAC,IACTkE,SAAU,QACVC,MAAO,GAAGC,KAAKC,cACfhD,KAAMA,EACNC,eAAe,IAGjB,IACE,MAAMrB,QAAiBT,EAAAU,QAAMC,IAC3B,6CAA4B8D,KAG9B,GAAwB,MAApBhE,EAASI,OACX,MAAM,IAAIC,MAAML,EAASI,QAG3B,OAAOJ,EAASM,I,CAChB,MAAOC,GACPC,QAAQC,IAAIF,EAAM8D,Q,EAGlBH,YACF,OAAOC,KAAKC,W,CAGVF,UAAMI,GACRH,KAAKC,YAAcE,C,CAGrBC,YACEJ,KAAK/C,KAAO,C,CArCdoD,cACEL,KAAKC,YAAc,GACnBD,KAAK/C,KAAO,C,GA0ChB,SAASqD,EAAaC,GACpB,MAAMC,EAAalB,EAAKE,MAAMiB,MAG5BnB,EAAKoB,cAAcC,MAAMC,QADvBJ,EACiC,QAEA,M,CAIvC,SAASK,IACPvB,EAAKK,QAAQP,mBACX,YACA,0GAEFC,YAAW,KACTC,EAAKK,QAAQrB,UAAY,EAAE,GAC1B,KAEHwC,WAAWxC,UAAY,GAEvBtB,EAAY,GAAGR,MAAK,EAACS,KAAEA,EAAI6B,QAAEA,EAASC,YAAaC,MACjD5B,EAAgB0B,GAChBG,EAAiBhC,EAAM+B,EAAOE,EAAgB,G,CAxBlDI,EAAKE,MAAMX,iBAAiB,QAASyB,GA4BrChB,EAAKE,MAAMX,iBAAiB,QAASyB,GACrChB,EAAKC,KAAKV,iBAAiB,UAM3B,SAAuB0B,GAMrB,GALA9B,IACA8B,EAAIQ,iBACJnB,EAASG,MAAQQ,EAAIS,cAAcC,SAAShB,YAAYQ,MACrDS,OACAC,eACEvB,EAASG,MAEZ,YADAc,IAIFjB,EAASQ,YAETR,EAASwB,iBAAiB,GAAG5E,MAAKL,IAChC,IAAKA,EAAM,OAEX,MAAMc,KAAEA,EAAI8B,YAAEA,EAAWD,QAAEA,GAAY3C,EACvC,IAAK4C,EAGH,OAFAN,SACAoC,IAtBJvB,EAAKI,QAAQpB,UAAY,GA2BvBlB,EAAgB0B,GAChBG,EAAiBhC,EAAM8B,EAAasC,GACpC5C,GAAe,G,ICzHnBA,IACAG,OAAOC,iBAAiB,OAAQJ,GAEhC,MAAM6C,EAAazE,SAASC,cAAc,kBAE1C,IAAIyE,EAAa,EACbC,EAAaF,EACbG,EAAc,EAEX,MAAMvC,EAAkB,EAClBmC,EAAiB,EAMvB,SAASpC,EAAiBhC,EAAM+B,EAAO0C,GAC5C,IAIIrE,EAAS,GAEbmE,EAAaE,EAAMJ,EAAaK,UAChCJ,EAAaG,GAERzE,GAAQA,EAAO+B,IAEhB/B,EAAO,IACTI,GAAU,sDAERJ,EAAO,IACTI,GAAU,sEAERJ,EAAO,IAAGI,GAAU,8CAEpBJ,EAAO,IACTI,GAAU,qCAnBMJ,EAAO,UAqBrBA,EAAO,IAAGI,GAAU,qCAtBTJ,EAAO,UAwBtBI,GAAU,mEAAmEJ,SAEzEA,EAAO,EAAI+B,IACb3B,GAAU,qCAzBGJ,EAAO,UA2BlBA,EAAO,EAAI+B,IACb3B,GAAU,qCA3BMJ,EAAO,UA6BrBA,EAAO,EAAI+B,IAAO3B,GAAU,8CAE5BJ,EAAO+B,IACT3B,GAAU,+DAA+D2B,UAEvE/B,EAAO+B,IACT3B,GAAU,uDAIZmE,EAAWlD,UAAYjB,E,CAGzBmE,EAAW3C,iBAAiB,SAAS,EAAC+C,OAAEA,MACX,QAAvBA,EAAOC,cAEPD,EAAOlD,UAAUoD,SAAS,+BAA8BL,GAAe,GAEvEG,EAAOlD,UAAUoD,SAAS,gCAA+BL,GAAe,GAExEG,EAAOlD,UAAUoD,SAAS,2BAC5BL,EAAcM,OAAOH,EAAOC,cAEzBN,IAIgB,IAAfA,GACF9C,IACAzB,EAAYyE,GAAajF,MAAK,EAACS,KAAEA,EAAI6B,QAAEA,EAASC,YAAaC,MAC3D5B,EAAgB0B,GAEhBG,EAAiBhC,EAAM+B,EAAOuC,GAC9B9C,GAAe,KAGjBmB,EACGwB,iBAAiBK,GACjBjF,MAAK,EAACS,KAAEA,EAAI6B,QAAEA,EAASC,YAAaC,MACnC5B,EAAgB0B,GAChBG,EAAiBhC,EAAM+B,EAAOuC,EAAW,KACzC,IC9FVhD,EAAAlD,EAAA,a,uCAMA,MAAM2G,EAAO,CACXtC,QAAS7C,SAASC,cAAc,eAChCmF,SAAUpF,SAASC,cAAc,sBACjCoF,WAAYrF,SAASC,cAAc,gBACnCqF,SAAUtF,SAASC,cAAc,eAG7BsF,EAAY,IAAI,EAAAC,EAAAvG,SA+GtB,SAASwG,IACP,MAAMC,EAAkB1F,SAASC,cAAc,qBACzC0F,EAAmB3F,SAASC,cAAc,wBAChD,EAAA2F,EAAAC,uBAAsBH,EAAiBC,GACvCJ,EAAUO,QACVX,EAAKC,SAASW,oBAAoB,QAASN,GAC3CG,EAAAI,iBAAiBD,oBAAoB,QAASH,EAAAK,0BAC9ClE,OAAOgE,oBAAoB,UAAWG,E,CAOxC,SAASA,EAAgBC,GACR,WAAXA,EAAEC,OACJb,EAAUO,QAEVX,EAAKC,SAASW,oBAAoB,QAASN,GAC3C1D,OAAOgE,oBAAoB,UAAWG,G,CAhI1Cf,EAAKtC,QAAQb,iBAAiB,SAW9B,SAAqBmE,GAInB,GAHAA,EAAEjC,iBACF0B,EAAAI,iBAAiBhE,iBAAiB,QAAS4D,EAAAK,0BAEjB,QAAtBE,EAAEpB,OAAOsB,SAAoB,OAEjC,MAAMC,GAmHaC,EAnHgBJ,EAAEpB,OAAOrE,GAoH3BgB,EAAA8E,KAAkB,qBACnBC,MAAKC,GAAQA,EAAKhG,KAAOwE,OAAOqB,MAFlD,IAAqBA,EAjHnBhB,EAAUoB,eAAeL,GACzBf,EAAUqB,OAGVzB,EAAKE,WAAWrD,iBAAiB,SAmBjC,WACMmD,EAAKE,WAAWxD,UAAUoD,SAAS,iBACrCE,EAAKE,WAAWL,YAAc,sBAC9BG,EAAKE,WAAWxD,UAAUgF,QAAQ,eAAgB,mBAElD,EAAAC,EAAAC,yBAES5B,EAAKE,WAAWxD,UAAUoD,SAAS,oBAC5CE,EAAKE,WAAWL,YAAc,iBAC9BG,EAAKE,WAAWxD,UAAUgF,QAAQ,iBAAkB,gBASxD,SAA2BG,GACvB,IACE,MAAMC,EAAwBC,aAAaC,QAAQ,iBAC7CC,EAAkBC,KAAKC,MAAML,GAE7BM,EAAmBH,EAAgBI,WAAU5D,GAASA,EAAMlD,KAAOsG,EAAYtG,KACrF0G,EAAgBK,OAAOF,EAAkB,GACzCL,aAAaQ,QAAQ,gBAAiBL,KAAKM,UAAUP,G,CACrD,MAAO7H,G,EAfTqI,CAAkBtB,IAGpBnB,EAAKE,WAAWL,YAAc,iBAC9BG,EAAKE,WAAWxD,UAAUgF,QAAQ,iBAAkB,e,IAjCtD1B,EAAKG,SAAStD,iBAAiB,SAiD/B,WACMmD,EAAKG,SAASzD,UAAUoD,SAAS,eACnCE,EAAKG,SAASN,YAAc,oBAC5BG,EAAKG,SAASzD,UAAUgF,QAAQ,aAAc,iBAE9C,EAAAC,EAAAe,uBACS1C,EAAKG,SAASzD,UAAUoD,SAAS,kBAC1CE,EAAKG,SAASN,YAAc,eAC5BG,EAAKG,SAASzD,UAAUgF,QAAQ,eAAgB,cASpD,SAAyBG,GACrB,IACE,MAAMc,EAAsBZ,aAAaC,QAAQ,eAC3CY,EAAgBV,KAAKC,MAAMQ,GAE3BE,EAAiBD,EAAcP,WAAU5D,GAASA,EAAMlD,KAAOsG,EAAYtG,KACjFqH,EAAcN,OAAOO,EAAgB,GACrCd,aAAaQ,QAAQ,cAAeL,KAAKM,UAAUI,G,CAErD,MAAOxI,G,EAhBP0I,CAAgB3B,IAGlBnB,EAAKG,SAASN,YAAc,eAC5BG,EAAKG,SAASzD,UAAUgF,QAAQ,eAAgB,a,IA7DlDK,aAAaQ,QAAQ,cAAeL,KAAKM,UAAUrB,IAiHrD,SAA6BU,GAC3B,IACE,MAAMC,EAAwBC,aAAaC,QAAQ,iBAC7CC,EAAkBC,KAAKC,MAAML,GACPG,EAAgBX,MAAKyB,GAAUA,EAAOxH,KAAOsG,EAAYtG,MAE/EyE,EAAKE,WAAWxD,UAAUgF,QAAQ,eAAgB,kBAClD1B,EAAKE,WAAWL,YAAc,wBAE9BG,EAAKE,WAAWxD,UAAUgF,QAAQ,iBAAkB,gBACpD1B,EAAKE,WAAWL,YAAc,iB,CAElC,MAAOzF,GAEP4F,EAAKE,WAAWxD,UAAUgF,QAAQ,iBAAkB,e,EA7HxDsB,CAAoB7B,GAChBnB,EAAKE,WAAWxD,UAAUoD,SAAS,kBACrCE,EAAKE,WAAWL,YAAc,sBACxBG,EAAKE,WAAWxD,UAAUoD,SAAS,kBACzCE,EAAKE,WAAWL,YAAc,mBA6HlC,SAA2BgC,GACzB,IACE,MAAMc,EAAsBZ,aAAaC,QAAQ,eAC3CY,EAAgBV,KAAKC,MAAMQ,GACPC,EAActB,MAAKyB,GAAUA,EAAOxH,KAAOsG,EAAYtG,MAE3EyE,EAAKG,SAASzD,UAAUgF,QAAQ,aAAc,gBAC9C1B,EAAKG,SAASN,YAAc,sBAE5BG,EAAKG,SAASzD,UAAUgF,QAAQ,eAAgB,cAChD1B,EAAKG,SAASN,YAAc,e,CAEhC,MAAOzF,GAEP4F,EAAKG,SAASzD,UAAUgF,QAAQ,eAAgB,a,GAxIpDuB,CAAkB9B,GACdnB,EAAKG,SAASzD,UAAUoD,SAAS,gBACjCE,EAAKG,SAASN,YAAc,oBACvBG,EAAKE,WAAWxD,UAAUoD,SAAS,gBAC1CE,EAAKG,SAASN,YAAc,gBAkE9BG,EAAKC,SAASpD,iBAAiB,QAASyD,GACxC1D,OAAOC,iBAAiB,UAAWkE,E,IAzGrCf,EAAKC,SAASpD,iBAAiB,QAASyD,GACxC1D,OAAOC,iBAAiB,UAAWkE,GAOnClG,SAASgC,iBAAiB,SAL1B,SAAwBqG,IACjBA,EAAMtD,OAAOuD,QAAQ,WAAaD,EAAMtD,OAAOuD,QAAQ,cACxD7C,G","sources":["src/js/popular.js","src/js/spinner.js","src/js/film-search.js","src/js/pagination.js","src/js/open-model.js"],"sourcesContent":["import axios from 'axios';\n\nimport { renderPagination, IN_MAIN_POPULAR } from './pagination.js';\nimport { KEY, MEDIA_TYPE, API } from './constants';\n\n// імпорт файлу сховища та запис в змінну ключа\nimport * as storageLocal from './local-storage.js';\nconst FILM_CURRENT_PAGE = 'film-current-page';\n//\nconst TIME_WINDOW = 'week';\nconst TRENDING = 'trending';\nconst GENRES = 'genre/movie/list';\nconst IMG_PATH = 'https://image.tmdb.org/t/p/';\nconst SMALL_SIZE = 'w500';\n\nexport const NO_IMAGE =\n  'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n\nexport let genresList;\n\ngetOriginGenres().then(response => {\n  genresList = Array.from(response.genres);\n});\n\nexport const galleryRef = document.querySelector('.js-gallery');\n\nconst warning = document.querySelector('.header__warning');\n\nwindow.addEventListener('load', () => {\n  galleryRef.innerHTML = '';\n\n  getPopulars(1)\n    .then(({ page, results, total_pages: pages }) => {\n      renderFilmCards(results);\n      renderPagination(page, pages, IN_MAIN_POPULAR);\n    })\n    .catch(() => {\n      warning.insertAdjacentHTML(\n        'beforeend',\n        `<div class=\"header__warning-message\">Service is temporarily unavailable.</div>`\n      );\n\n      setTimeout(() => {\n        warning.innerHTML = '';\n      }, 4000);\n    });\n});\n\nexport async function getPopulars(page) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: KEY,\n      page: page,\n      include_adult: false,\n    });\n\n    const response = await axios.get(\n      `${API}${TRENDING}/${MEDIA_TYPE}/${TIME_WINDOW}?${searchParams}`\n    );\n\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n\n    // console.log('респонс Барчука', response.data);\n\n    return response.data;\n  } catch (error) {\n    // console.log('Підставити картинку, сервер терміново недоступний');\n  }\n}\n\nexport function renderFilmCards(data) {\n  let markup = '';\n  data.forEach(({ id, poster_path, genre_ids, title, release_date }) => {\n    let genresStr = getGenres(genre_ids);\n    let year = !release_date ? '' : release_date.substring(0, 4);\n    if (genresStr && year) genresStr += ' | ';\n    if (!title) title = 'no information';\n\n    let smallImg = !!poster_path\n      ? IMG_PATH + SMALL_SIZE + poster_path\n      : NO_IMAGE;\n\n    markup += `\n      <li class=\"film-card\">\n         \t<a href=\"#\" class=\"film-card__link\">\n            <img\n              class=\"film-card__film-img\"\n              src=\"${smallImg}\"\n              alt=\"${title}\"\n              id=\"${id}\"\n            />\n            <h3 class=\"film-card__film-name\">${title}</h3>\n            <p class=\"film-card__genre\">${genresStr}${year}</p>\n          </a>\n        </li>\n\t\t\t\t\t\t\t`;\n  });\n\n  galleryRef.innerHTML = markup;\n\n  // запис в локальне сховище\n  storageLocal.save(FILM_CURRENT_PAGE, [...data]);\n  //\n}\n\nasync function getOriginGenres() {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: KEY,\n    });\n\n    const response = await axios.get(`${API}${GENRES}?${searchParams}`);\n\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n\n    return response.data;\n  } catch (error) {\n    console.log('Підставити картинку, сервер терміново недоступний');\n  }\n}\n\nexport function getGenres(genreSet) {\n  let genreStr = '';\n\n  if (!genreSet) return '';\n  genreSet.forEach(id => {\n    for (const genre of genresList) {\n      if (genre.id === id) genreStr += genre.name + ', ';\n    }\n  });\n\n  return !genreStr ? '' : genreStr.substring(0, genreStr.length - 2);\n}\n","export default function spinnerToggle() { \n  document.querySelector('.spinner').classList.toggle(\"is-hidden\");\n}\n\n// потрібно викликати функцію spinnerToggle(), для цього у js файлі до якого функція викликається потрібно зробити імпорт:     import spinnerToggle from './spinner'(адреса може бути інша);\n// Функція просто забирає у спінера display:none, тому коли сторінка завантажиться потрібно знову викликати функцію.\n","import spinnerToggle from './spinner';\n\nconst refs = {\n  form: document.querySelector('.header__form'),\n  input: document.querySelector('.header__input'),\n  formButton: document.querySelector('.btn'),\n  gallery: document.querySelector('.js-gallery'),\n  warning: document.querySelector('.header__warning'),\n};\nimport axios from 'axios';\nimport { getPopulars, renderFilmCards } from './popular.js';\nimport { KEY } from './constants';\nimport {\n  renderPagination,\n  IN_MAIN_POPULAR,\n  IN_MAIN_SEARCH,\n} from './pagination.js';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport class searchMovieApi {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async searchMovieFetch(page) {\n    const searchMovieParams = new URLSearchParams({\n      api_key: KEY,\n      language: 'en-US',\n      query: `${this.searchQuery}`,\n      page: page,\n      include_adult: false,\n    });\n\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/search/movie?${searchMovieParams}`\n      );\n\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n\nexport const movieApi = new searchMovieApi();\n\nrefs.input.addEventListener('input', onInputClear);\nfunction onInputClear(evt) {\n  const inputValue = refs.input.value;\n\n  if (inputValue) {\n    refs.inputBtnClear.style.display = 'block';\n  } else {\n    refs.inputBtnClear.style.display = 'none';\n  }\n}\n\nfunction emptyQueryOrNoResults() {\n  refs.warning.insertAdjacentHTML(\n    'beforeend',\n    `<div class=\"header__warning-message\">Search result not successful. Enter the correct movie name.</div>`\n  );\n  setTimeout(() => {\n    refs.warning.innerHTML = '';\n  }, 4000);\n\n  galleryRef.innerHTML = '';\n\n  getPopulars(1).then(({ page, results, total_pages: pages }) => {\n    renderFilmCards(results);\n    renderPagination(page, pages, IN_MAIN_POPULAR);\n  });\n}\n\nrefs.input.addEventListener('input', onInputClear);\nrefs.form.addEventListener('submit', onSearchClick);\n\nfunction clearSearch() {\n  refs.gallery.innerHTML = '';\n}\n\nfunction onSearchClick(evt) {\n  spinnerToggle();\n  evt.preventDefault();\n  movieApi.query = evt.currentTarget.elements.searchQuery.value\n    .trim()\n    .toLowerCase();\n  if (!movieApi.query) {\n    emptyQueryOrNoResults();\n    return;\n  }\n\n  movieApi.resetPage();\n\n  movieApi.searchMovieFetch(1).then(data => {\n    if (!data) return;\n\n    const { page, total_pages, results } = data;\n    if (!total_pages) {\n      spinnerToggle();\n      emptyQueryOrNoResults();\n      return;\n    }\n\n    clearSearch();\n    renderFilmCards(results);\n    renderPagination(page, total_pages, IN_MAIN_SEARCH);\n    spinnerToggle();\n  });\n}\n","import { renderFilmCards, getPopulars } from './popular.js';\nimport spinnerToggle from './spinner';\nimport { movieApi } from './film-search.js';\n\nspinnerToggle();\nwindow.addEventListener('load', spinnerToggle);\n\nconst pagMainRef = document.querySelector('.js-pagination');\n\nlet currentNow = 1;\nlet currentRef = pagMainRef;\nlet currentPage = 1;\n\nexport const IN_MAIN_POPULAR = 1;\nexport const IN_MAIN_SEARCH = 2;\nexport const IN_LIBRARY = 0;\n\nconst LEFT_ARROW = '&#8592;';\nconst RIGHT_ARROW = '&#8594;';\n\nexport function renderPagination(page, pages, now) {\n  let prevPage = page - 1;\n  let twoPrevPage = page - 2;\n  let nextPage = page + 1;\n  let twoNextPage = page + 2;\n  let markup = '';\n\n  currentRef = now ? pagMainRef : pagLibRef;\n  currentNow = now;\n\n  if (!page || page > pages) return;\n\n  if (page > 1)\n    markup += `<li class=\"js-pagination__arrow-left\">${LEFT_ARROW}</li>`;\n\n  if (page > 1)\n    markup += `<li class=\"js-pagination__button js-pagination__button-end\">1</li>`;\n\n  if (page > 4) markup += `<li class=\"js-pagination__points\">...</li>`;\n\n  if (page > 3)\n    markup += `<li class=\"js-pagination__button\">${twoPrevPage}</li>`;\n\n  if (page > 2) markup += `<li class=\"js-pagination__button\">${prevPage}</li>`;\n\n  markup += `<li class=\"js-pagination__button js-pagination__button-current\">${page}</li>`;\n\n  if (page + 1 < pages)\n    markup += `<li class=\"js-pagination__button\">${nextPage}</li>`;\n\n  if (page + 2 < pages)\n    markup += `<li class=\"js-pagination__button\">${twoNextPage}</li>`;\n\n  if (page + 4 < pages) markup += `<li class=\"js-pagination__points\">...</li>`;\n\n  if (page < pages)\n    markup += `<li class=\"js-pagination__button js-pagination__button-end\">${pages}</li>`;\n\n  if (page < pages)\n    markup += `<li class=\"js-pagination__arrow-right\">${RIGHT_ARROW}</li>`;\n\n  // pagLibRef\n  // Here need a ref of Library pagRef\n  currentRef.innerHTML = markup;\n}\n\ncurrentRef.addEventListener('click', ({ target }) => {\n  if (target.textContent === '...') return;\n\n  if (target.classList.contains('js-pagination__arrow-left')) currentPage -= 1;\n\n  if (target.classList.contains('js-pagination__arrow-right')) currentPage += 1;\n\n  if (target.classList.contains('js-pagination__button'))\n    currentPage = Number(target.textContent);\n\n  if (!currentNow) {\n    // console.log('Call function from Library');\n    // renderQueuedFilmCards(page);\n  } else {\n    if (currentNow === 1) {\n      spinnerToggle();\n      getPopulars(currentPage).then(({ page, results, total_pages: pages }) => {\n        renderFilmCards(results);\n\n        renderPagination(page, pages, currentNow);\n        spinnerToggle();\n      });\n    } else {\n      movieApi\n        .searchMovieFetch(currentPage)\n        .then(({ page, results, total_pages: pages }) => {\n          renderFilmCards(results);\n          renderPagination(page, pages, currentNow);\n        });\n    }\n  }\n});\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film';\nimport { handleBackButtonClick, trailerButtonRef,  handleTrailerButtonClick} from './trailer';\n\nimport { sendWatchedToStorage, sendQueueToStorage} from \"./local-storage-set\";\n\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  btnWatched: document.querySelector(\".btn_watched\"),\n  btnQueue: document.querySelector(\".btn_queue\"),\n};\n\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);  \n\nfunction onOverlayClose(event) {\n  if (!event.target.closest(\".modal\") && event.target.closest('.backdrop')) {\n      onCloseModal();\n  }\n}\ndocument.addEventListener(\"click\", onOverlayClose)\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n  trailerButtonRef.addEventListener('click', handleTrailerButtonClick);\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n///// for local-storage and button /////////\n  refs.btnWatched.addEventListener(\"click\", onWatchedBtnClick)\n  refs.btnQueue.addEventListener(\"click\", onQueueBtnClick)\n\n  localStorage.setItem(\"CurrentFilm\", JSON.stringify(dataCurentFilm))\n  \n  checkWatchedStorage(dataCurentFilm)\n  if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n    refs.btnWatched.textContent = 'REMOVE FROM WATCHED'} \n  else if(refs.btnWatched.classList.contains(\"watched_send\")){\n    refs.btnWatched.textContent = 'ADD TO WATCHED'\n  }\n\n  checkQueueStorage(dataCurentFilm)\n  if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n      refs.btnQueue.textContent = 'REMOVE FROM QUEUE'}\n  else if (refs.btnWatched.classList.contains(\"queue_send\")){\n    refs.btnQueue.textContent = 'ADD TO QUEUE'\n  }\n    \n  function onWatchedBtnClick() {\n    if (refs.btnWatched.classList.contains(\"watched_send\")) {\n      refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n      refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n\n      sendWatchedToStorage()\n\n    } else if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n      refs.btnWatched.textContent = 'ADD TO WATCHED'  \n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n\n      removeWatchedFilm(dataCurentFilm)\n    }\n      \n    refs.btnWatched.textContent = 'ADD TO WATCHED' \n    refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")  \n  }\n \n  function removeWatchedFilm(currentFilm) {\n      try {\n        const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n        const getWatchedArray = JSON.parse(getWatchedFromStorage)\n\n        const watchedFilmIndex = getWatchedArray.findIndex(value => value.id === currentFilm.id);\n        getWatchedArray.splice(watchedFilmIndex, 1)\n        localStorage.setItem(\"WatchedMovies\", JSON.stringify(getWatchedArray))\n      } catch (error) {\n      // console.error('Get state error: ', error.message);\n    }\n}\n  \n  function onQueueBtnClick() {\n    if (refs.btnQueue.classList.contains(\"queue_send\")) {\n      refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n      refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n\n      sendQueueToStorage()\n    } else if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n      refs.btnQueue.textContent = 'ADD TO QUEUE'  \n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n\n      removeQueueFilm(dataCurentFilm)\n    }\n\n    refs.btnQueue.textContent = 'ADD TO QUEUE'  \n    refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n  }\n\n  function removeQueueFilm(currentFilm) {\n      try {\n        const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n        const getQueueArray = JSON.parse(getQueueFromStorage)\n\n        const queueFilmIndex = getQueueArray.findIndex(value => value.id === currentFilm.id);\n        getQueueArray.splice(queueFilmIndex, 1)\n        localStorage.setItem(\"QueueMovies\", JSON.stringify(getQueueArray))\n\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n    }\n  }\n///////////////////end of local-storage ///////////\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  const iframeContainer = document.querySelector('.iframe-container');\n  const trailerContainer = document.querySelector('.film__info-wrapper');\n  handleBackButtonClick(iframeContainer, trailerContainer);\n  modalFilm.close();\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  trailerButtonRef.removeEventListener('click', handleTrailerButtonClick);\n  window.removeEventListener('keydown', onCloseModalEsc);\n\n\n  //////////Примусове перезавантаження сторінки /////////////////////////////////\n  // window.location.reload()\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList = storageLocal.load('film-current-page');\n  return filmList.find(film => film.id === Number(filmId));\n}\n\n////////////// checks for button /////////////////\n\nfunction checkWatchedStorage(currentFilm) {\n  try {\n    const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n    const getWatchedArray = JSON.parse(getWatchedFromStorage)\n    const checkWatchedStorage = getWatchedArray.find(option => option.id === currentFilm.id);\n        if (checkWatchedStorage) {\n          refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n          refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n        } else {\n          refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n          refs.btnWatched.textContent = 'ADD TO WATCHED'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n    }\n}\n\nfunction checkQueueStorage(currentFilm) {\n  try {\n    const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n    const getQueueArray = JSON.parse(getQueueFromStorage)\n    const checkQueueStorage = getQueueArray.find(option => option.id === currentFilm.id);\n        if (checkQueueStorage) {\n          refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n          refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n        } else {\n          refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n          refs.btnQueue.textContent = 'ADD TO QUEUE'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n    }\n}"],"names":["$2shzp","parcelRequire","$ff1fb5e2e4d3490a$export$65f5202b5c3d7552","async","searchParams","URLSearchParams","api_key","$8G1wF","KEY","response","default","get","API","status","Error","data","error","console","log","$ff1fb5e2e4d3490a$var$getOriginGenres","then","Array","from","genres","$ff1fb5e2e4d3490a$export$7ccb58989d57b8c2","document","querySelector","$ff1fb5e2e4d3490a$var$warning","$ff1fb5e2e4d3490a$export$41925180ea5ac7b4","page","include_adult","MEDIA_TYPE","$ff1fb5e2e4d3490a$export$e6243425577ce802","markup","forEach","id","poster_path","genre_ids","title","release_date","genresStr","genreSet","genreStr","genre","name","substring","length","$ff1fb5e2e4d3490a$export$c5604fa8028da00","year","$ff1fb5e2e4d3490a$var$IMG_PATH","innerHTML","$b5rV1","save","$00cfbbdd8a53f936$export$2e2bcd8739ae039","classList","toggle","window","addEventListener","results","total_pages","pages","$1bab9c519cfa82bc$export$825408fbca4f2040","$1bab9c519cfa82bc$export$48363212074cf40d","catch","insertAdjacentHTML","setTimeout","$3c57aece0cd5b27c$var$refs","form","input","formButton","gallery","warning","$3c57aece0cd5b27c$export$b4a14c65f27aca","searchMovieParams","language","query","this","searchQuery","message","newQuery","resetPage","constructor","$3c57aece0cd5b27c$var$onInputClear","evt","inputValue","value","inputBtnClear","style","display","$3c57aece0cd5b27c$var$emptyQueryOrNoResults","galleryRef","preventDefault","currentTarget","elements","trim","toLowerCase","searchMovieFetch","$1bab9c519cfa82bc$export$f946d1a34dbd3bc6","$1bab9c519cfa82bc$var$pagMainRef","$1bab9c519cfa82bc$var$currentNow","$1bab9c519cfa82bc$var$currentRef","$1bab9c519cfa82bc$var$currentPage","now","pagLibRef","target","textContent","contains","Number","$95c314e50c7458b5$var$refs","closeBtn","btnWatched","btnQueue","$95c314e50c7458b5$var$modalFilm","$fQE3M","$95c314e50c7458b5$var$onCloseModal","iframeContainer","trailerContainer","$37v9V","handleBackButtonClick","close","removeEventListener","trailerButtonRef","handleTrailerButtonClick","$95c314e50c7458b5$var$onCloseModalEsc","e","code","nodeName","dataCurentFilm","filmId","load","find","film","modifyDataFilm","open","replace","$9dykO","sendWatchedToStorage","currentFilm","getWatchedFromStorage","localStorage","getItem","getWatchedArray","JSON","parse","watchedFilmIndex","findIndex","splice","setItem","stringify","removeWatchedFilm","sendQueueToStorage","getQueueFromStorage","getQueueArray","queueFilmIndex","removeQueueFilm","option","$95c314e50c7458b5$var$checkWatchedStorage","$95c314e50c7458b5$var$checkQueueStorage","event","closest"],"version":3,"file":"index.311e2b56.js.map"}